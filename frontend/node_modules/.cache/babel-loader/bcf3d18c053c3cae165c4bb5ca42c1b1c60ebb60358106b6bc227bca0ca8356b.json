{"ast":null,"code":"var _jsxFileName = \"/home/glenndev/Desktop/tic-tac-toe/tic-tac-toe-app/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Board from \"./components/Board\";\nimport \"./styles/App.css\";\nimport { io } from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io(\"http://localhost:5000\", {\n  withCredentials: true // Allow credentials\n});\nconst App = () => {\n  _s();\n  const [gameId, setGameId] = useState(\"\");\n  const [player, setPlayer] = useState(\"\");\n  const [gameState, setGameState] = useState({\n    board: Array(9).fill(\"\"),\n    currentTurn: \"\",\n    status: \"waiting\"\n  });\n  const [isSpectator, setIsSpectator] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  useEffect(() => {\n    if (gameId) {\n      socket.emit(\"joinGame\", {\n        gameId,\n        player\n      });\n      socket.on(\"playerJoined\", ({\n        gameId,\n        player\n      }) => {\n        console.log(`${player} joined game ${gameId}`);\n      });\n      socket.on(\"moveMade\", ({\n        gameId,\n        player,\n        position\n      }) => {\n        console.log(`Move made by ${player} at position ${position}`);\n        // Fetch the updated game state from the backend\n        spectateGame(gameId);\n      });\n    }\n    return () => {\n      socket.disconnect();\n    };\n  }, [gameId, player]);\n  const createGame = async (player1, isSinglePlayer = false) => {\n    setIsLoading(true);\n    try {\n      const response = await axios.post(\"http://localhost:5000/api/games\", {\n        player1\n      });\n      setGameId(response.data.gameId);\n      setPlayer(player1);\n      setGameState({\n        ...response.data,\n        board: Array(9).fill(\"\"),\n        // Ensure board is initialized\n        currentTurn: player1,\n        status: \"waiting\"\n      });\n      setErrorMessage(\"\");\n    } catch (error) {\n      console.error(\"Failed to create game:\", error);\n      setErrorMessage(\"Failed to create game. Please try again.\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const joinGame = async (gameId, playerName) => {\n    setIsLoading(true);\n    try {\n      const response = await axios.post(\"http://localhost:5000/api/games/join\", {\n        gameId,\n        player: playerName\n      });\n      setGameId(gameId);\n      setPlayer(playerName);\n      setGameState(response.data);\n      setErrorMessage(\"\");\n    } catch (error) {\n      console.error(\"Failed to join game:\", error);\n      setErrorMessage(\"Failed to join game. Make sure the Game ID is correct.\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const spectateGame = async gameId => {\n    setIsLoading(true);\n    try {\n      const response = await axios.get(`http://localhost:5000/api/games/state/${gameId}`);\n      setGameId(gameId);\n      setGameState(response.data);\n      setIsSpectator(true);\n      setErrorMessage(\"\");\n    } catch (error) {\n      console.error(\"Failed to spectate game:\", error);\n      setErrorMessage(\"Failed to spectate game. Make sure the Game ID is correct.\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const makeMove = async position => {\n    if (isSpectator) {\n      setErrorMessage(\"Spectators cannot make moves.\");\n      return;\n    }\n    try {\n      const response = await axios.post(\"http://localhost:5000/api/games/move\", {\n        gameId,\n        player,\n        position\n      });\n      setGameState(response.data);\n      setErrorMessage(\"\");\n    } catch (error) {\n      console.error(\"Failed to make move:\", error);\n      setErrorMessage(\"Failed to make move. Check if it's your turn or the position is valid.\");\n    }\n  };\n  const copyToClipboard = () => {\n    navigator.clipboard.writeText(gameId);\n    setErrorMessage(\"Game ID copied to clipboard!\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"app-title\",\n      children: \"Tic Tac Toe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), !gameId ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-setup\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Create or Join a Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn primary\",\n          onClick: () => createGame(\"Player1\", true),\n          disabled: isLoading,\n          children: isLoading ? \"Creating Game...\" : \"Play Against AI\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn primary\",\n          onClick: () => createGame(\"Player1\", false),\n          disabled: isLoading,\n          children: isLoading ? \"Creating Game...\" : \"Create Game (Multiplayer)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"join-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter Game ID\",\n          value: gameId,\n          onChange: e => setGameId(e.target.value),\n          className: \"input-field\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn secondary\",\n            onClick: () => joinGame(gameId, \"Player2\"),\n            disabled: isLoading,\n            children: isLoading ? \"Joining Game...\" : \"Join Game\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn secondary\",\n            onClick: () => spectateGame(gameId),\n            disabled: isLoading,\n            children: isLoading ? \"Loading...\" : \"Spectate Game\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-container\",\n      children: gameState ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Game ID: \", gameId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn copy-btn\",\n          onClick: copyToClipboard,\n          children: \"Copy Game ID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Status: \", gameState.status]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Current Turn: \", gameState.currentTurn]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Board, {\n          board: gameState.board,\n          makeMove: makeMove\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 15\n        }, this), gameState.status === \"finished\" && /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"winner-message\",\n          children: [\"Winner:\", \" \", gameState.winner === \"draw\" ? \"It's a draw!\" : gameState.winner]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Loading game state...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 9\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"iIZ866DS0mTLGr9BG4lk/grCffU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","Board","io","jsxDEV","_jsxDEV","socket","withCredentials","App","_s","gameId","setGameId","player","setPlayer","gameState","setGameState","board","Array","fill","currentTurn","status","isSpectator","setIsSpectator","errorMessage","setErrorMessage","isLoading","setIsLoading","emit","on","console","log","position","spectateGame","disconnect","createGame","player1","isSinglePlayer","response","post","data","error","joinGame","playerName","get","makeMove","copyToClipboard","navigator","clipboard","writeText","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","type","placeholder","value","onChange","e","target","winner","_c","$RefreshReg$"],"sources":["/home/glenndev/Desktop/tic-tac-toe/tic-tac-toe-app/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Board from \"./components/Board\";\nimport \"./styles/App.css\";\nimport { io } from \"socket.io-client\";\n\nconst socket = io(\"http://localhost:5000\", {\n  withCredentials: true, // Allow credentials\n});\n\nconst App = () => {\n  const [gameId, setGameId] = useState(\"\");\n  const [player, setPlayer] = useState(\"\");\n  const [gameState, setGameState] = useState({\n    board: Array(9).fill(\"\"),\n    currentTurn: \"\",\n    status: \"waiting\",\n  });\n  const [isSpectator, setIsSpectator] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    if (gameId) {\n      socket.emit(\"joinGame\", { gameId, player });\n\n      socket.on(\"playerJoined\", ({ gameId, player }) => {\n        console.log(`${player} joined game ${gameId}`);\n      });\n\n      socket.on(\"moveMade\", ({ gameId, player, position }) => {\n        console.log(`Move made by ${player} at position ${position}`);\n        // Fetch the updated game state from the backend\n        spectateGame(gameId);\n      });\n    }\n\n    return () => {\n      socket.disconnect();\n    };\n  }, [gameId, player]);\n\n  const createGame = async (player1, isSinglePlayer = false) => {\n    setIsLoading(true);\n    try {\n      const response = await axios.post(\"http://localhost:5000/api/games\", {\n        player1,\n      });\n      setGameId(response.data.gameId);\n      setPlayer(player1);\n      setGameState({\n        ...response.data,\n        board: Array(9).fill(\"\"), // Ensure board is initialized\n        currentTurn: player1,\n        status: \"waiting\",\n      });\n      setErrorMessage(\"\");\n    } catch (error) {\n      console.error(\"Failed to create game:\", error);\n      setErrorMessage(\"Failed to create game. Please try again.\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const joinGame = async (gameId, playerName) => {\n    setIsLoading(true);\n    try {\n      const response = await axios.post(\n        \"http://localhost:5000/api/games/join\",\n        {\n          gameId,\n          player: playerName,\n        }\n      );\n      setGameId(gameId);\n      setPlayer(playerName);\n      setGameState(response.data);\n      setErrorMessage(\"\");\n    } catch (error) {\n      console.error(\"Failed to join game:\", error);\n      setErrorMessage(\"Failed to join game. Make sure the Game ID is correct.\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const spectateGame = async (gameId) => {\n    setIsLoading(true);\n    try {\n      const response = await axios.get(\n        `http://localhost:5000/api/games/state/${gameId}`\n      );\n      setGameId(gameId);\n      setGameState(response.data);\n      setIsSpectator(true);\n      setErrorMessage(\"\");\n    } catch (error) {\n      console.error(\"Failed to spectate game:\", error);\n      setErrorMessage(\n        \"Failed to spectate game. Make sure the Game ID is correct.\"\n      );\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const makeMove = async (position) => {\n    if (isSpectator) {\n      setErrorMessage(\"Spectators cannot make moves.\");\n      return;\n    }\n\n    try {\n      const response = await axios.post(\n        \"http://localhost:5000/api/games/move\",\n        {\n          gameId,\n          player,\n          position,\n        }\n      );\n      setGameState(response.data);\n      setErrorMessage(\"\");\n    } catch (error) {\n      console.error(\"Failed to make move:\", error);\n      setErrorMessage(\n        \"Failed to make move. Check if it's your turn or the position is valid.\"\n      );\n    }\n  };\n\n  const copyToClipboard = () => {\n    navigator.clipboard.writeText(gameId);\n    setErrorMessage(\"Game ID copied to clipboard!\");\n  };\n\n  return (\n    <div className=\"app-container\">\n      <h1 className=\"app-title\">Tic Tac Toe</h1>\n      {!gameId ? (\n        <div className=\"game-setup\">\n          <h2>Create or Join a Game</h2>\n          <div className=\"button-group\">\n            <button\n              className=\"btn primary\"\n              onClick={() => createGame(\"Player1\", true)}\n              disabled={isLoading}\n            >\n              {isLoading ? \"Creating Game...\" : \"Play Against AI\"}\n            </button>\n            <button\n              className=\"btn primary\"\n              onClick={() => createGame(\"Player1\", false)}\n              disabled={isLoading}\n            >\n              {isLoading ? \"Creating Game...\" : \"Create Game (Multiplayer)\"}\n            </button>\n          </div>\n          <div className=\"join-section\">\n            <input\n              type=\"text\"\n              placeholder=\"Enter Game ID\"\n              value={gameId}\n              onChange={(e) => setGameId(e.target.value)}\n              className=\"input-field\"\n            />\n            <div className=\"button-group\">\n              <button\n                className=\"btn secondary\"\n                onClick={() => joinGame(gameId, \"Player2\")}\n                disabled={isLoading}\n              >\n                {isLoading ? \"Joining Game...\" : \"Join Game\"}\n              </button>\n              <button\n                className=\"btn secondary\"\n                onClick={() => spectateGame(gameId)}\n                disabled={isLoading}\n              >\n                {isLoading ? \"Loading...\" : \"Spectate Game\"}\n              </button>\n            </div>\n          </div>\n        </div>\n      ) : (\n        <div className=\"game-container\">\n          {gameState ? (\n            <div>\n              <h2>Game ID: {gameId}</h2>\n              <button className=\"btn copy-btn\" onClick={copyToClipboard}>\n                Copy Game ID\n              </button>\n              <h3>Status: {gameState.status}</h3>\n              <h3>Current Turn: {gameState.currentTurn}</h3>\n              <Board board={gameState.board} makeMove={makeMove} />\n              {gameState.status === \"finished\" && (\n                <h3 className=\"winner-message\">\n                  Winner:{\" \"}\n                  {gameState.winner === \"draw\"\n                    ? \"It's a draw!\"\n                    : gameState.winner}\n                </h3>\n              )}\n            </div>\n          ) : (\n            <h3>Loading game state...</h3>\n          )}\n        </div>\n      )}\n      {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAO,kBAAkB;AACzB,SAASC,EAAE,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,MAAM,GAAGH,EAAE,CAAC,uBAAuB,EAAE;EACzCI,eAAe,EAAE,IAAI,CAAE;AACzB,CAAC,CAAC;AAEF,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACa,MAAM,EAAEC,SAAS,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACe,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAAC;IACzCiB,KAAK,EAAEC,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,EAAE,CAAC;IACxBC,WAAW,EAAE,EAAE;IACfC,MAAM,EAAE;EACV,CAAC,CAAC;EACF,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGvB,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACwB,YAAY,EAAEC,eAAe,CAAC,GAAGzB,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAAC0B,SAAS,EAAEC,YAAY,CAAC,GAAG3B,QAAQ,CAAC,KAAK,CAAC;EAEjDC,SAAS,CAAC,MAAM;IACd,IAAIU,MAAM,EAAE;MACVJ,MAAM,CAACqB,IAAI,CAAC,UAAU,EAAE;QAAEjB,MAAM;QAAEE;MAAO,CAAC,CAAC;MAE3CN,MAAM,CAACsB,EAAE,CAAC,cAAc,EAAE,CAAC;QAAElB,MAAM;QAAEE;MAAO,CAAC,KAAK;QAChDiB,OAAO,CAACC,GAAG,CAAC,GAAGlB,MAAM,gBAAgBF,MAAM,EAAE,CAAC;MAChD,CAAC,CAAC;MAEFJ,MAAM,CAACsB,EAAE,CAAC,UAAU,EAAE,CAAC;QAAElB,MAAM;QAAEE,MAAM;QAAEmB;MAAS,CAAC,KAAK;QACtDF,OAAO,CAACC,GAAG,CAAC,gBAAgBlB,MAAM,gBAAgBmB,QAAQ,EAAE,CAAC;QAC7D;QACAC,YAAY,CAACtB,MAAM,CAAC;MACtB,CAAC,CAAC;IACJ;IAEA,OAAO,MAAM;MACXJ,MAAM,CAAC2B,UAAU,CAAC,CAAC;IACrB,CAAC;EACH,CAAC,EAAE,CAACvB,MAAM,EAAEE,MAAM,CAAC,CAAC;EAEpB,MAAMsB,UAAU,GAAG,MAAAA,CAAOC,OAAO,EAAEC,cAAc,GAAG,KAAK,KAAK;IAC5DV,YAAY,CAAC,IAAI,CAAC;IAClB,IAAI;MACF,MAAMW,QAAQ,GAAG,MAAMpC,KAAK,CAACqC,IAAI,CAAC,iCAAiC,EAAE;QACnEH;MACF,CAAC,CAAC;MACFxB,SAAS,CAAC0B,QAAQ,CAACE,IAAI,CAAC7B,MAAM,CAAC;MAC/BG,SAAS,CAACsB,OAAO,CAAC;MAClBpB,YAAY,CAAC;QACX,GAAGsB,QAAQ,CAACE,IAAI;QAChBvB,KAAK,EAAEC,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,EAAE,CAAC;QAAE;QAC1BC,WAAW,EAAEgB,OAAO;QACpBf,MAAM,EAAE;MACV,CAAC,CAAC;MACFI,eAAe,CAAC,EAAE,CAAC;IACrB,CAAC,CAAC,OAAOgB,KAAK,EAAE;MACdX,OAAO,CAACW,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9ChB,eAAe,CAAC,0CAA0C,CAAC;IAC7D,CAAC,SAAS;MACRE,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAED,MAAMe,QAAQ,GAAG,MAAAA,CAAO/B,MAAM,EAAEgC,UAAU,KAAK;IAC7ChB,YAAY,CAAC,IAAI,CAAC;IAClB,IAAI;MACF,MAAMW,QAAQ,GAAG,MAAMpC,KAAK,CAACqC,IAAI,CAC/B,sCAAsC,EACtC;QACE5B,MAAM;QACNE,MAAM,EAAE8B;MACV,CACF,CAAC;MACD/B,SAAS,CAACD,MAAM,CAAC;MACjBG,SAAS,CAAC6B,UAAU,CAAC;MACrB3B,YAAY,CAACsB,QAAQ,CAACE,IAAI,CAAC;MAC3Bf,eAAe,CAAC,EAAE,CAAC;IACrB,CAAC,CAAC,OAAOgB,KAAK,EAAE;MACdX,OAAO,CAACW,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5ChB,eAAe,CAAC,wDAAwD,CAAC;IAC3E,CAAC,SAAS;MACRE,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAED,MAAMM,YAAY,GAAG,MAAOtB,MAAM,IAAK;IACrCgB,YAAY,CAAC,IAAI,CAAC;IAClB,IAAI;MACF,MAAMW,QAAQ,GAAG,MAAMpC,KAAK,CAAC0C,GAAG,CAC9B,yCAAyCjC,MAAM,EACjD,CAAC;MACDC,SAAS,CAACD,MAAM,CAAC;MACjBK,YAAY,CAACsB,QAAQ,CAACE,IAAI,CAAC;MAC3BjB,cAAc,CAAC,IAAI,CAAC;MACpBE,eAAe,CAAC,EAAE,CAAC;IACrB,CAAC,CAAC,OAAOgB,KAAK,EAAE;MACdX,OAAO,CAACW,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAChDhB,eAAe,CACb,4DACF,CAAC;IACH,CAAC,SAAS;MACRE,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAED,MAAMkB,QAAQ,GAAG,MAAOb,QAAQ,IAAK;IACnC,IAAIV,WAAW,EAAE;MACfG,eAAe,CAAC,+BAA+B,CAAC;MAChD;IACF;IAEA,IAAI;MACF,MAAMa,QAAQ,GAAG,MAAMpC,KAAK,CAACqC,IAAI,CAC/B,sCAAsC,EACtC;QACE5B,MAAM;QACNE,MAAM;QACNmB;MACF,CACF,CAAC;MACDhB,YAAY,CAACsB,QAAQ,CAACE,IAAI,CAAC;MAC3Bf,eAAe,CAAC,EAAE,CAAC;IACrB,CAAC,CAAC,OAAOgB,KAAK,EAAE;MACdX,OAAO,CAACW,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5ChB,eAAe,CACb,wEACF,CAAC;IACH;EACF,CAAC;EAED,MAAMqB,eAAe,GAAGA,CAAA,KAAM;IAC5BC,SAAS,CAACC,SAAS,CAACC,SAAS,CAACtC,MAAM,CAAC;IACrCc,eAAe,CAAC,8BAA8B,CAAC;EACjD,CAAC;EAED,oBACEnB,OAAA;IAAK4C,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC5B7C,OAAA;MAAI4C,SAAS,EAAC,WAAW;MAAAC,QAAA,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACzC,CAAC5C,MAAM,gBACNL,OAAA;MAAK4C,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACzB7C,OAAA;QAAA6C,QAAA,EAAI;MAAqB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC9BjD,OAAA;QAAK4C,SAAS,EAAC,cAAc;QAAAC,QAAA,gBAC3B7C,OAAA;UACE4C,SAAS,EAAC,aAAa;UACvBM,OAAO,EAAEA,CAAA,KAAMrB,UAAU,CAAC,SAAS,EAAE,IAAI,CAAE;UAC3CsB,QAAQ,EAAE/B,SAAU;UAAAyB,QAAA,EAEnBzB,SAAS,GAAG,kBAAkB,GAAG;QAAiB;UAAA0B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7C,CAAC,eACTjD,OAAA;UACE4C,SAAS,EAAC,aAAa;UACvBM,OAAO,EAAEA,CAAA,KAAMrB,UAAU,CAAC,SAAS,EAAE,KAAK,CAAE;UAC5CsB,QAAQ,EAAE/B,SAAU;UAAAyB,QAAA,EAEnBzB,SAAS,GAAG,kBAAkB,GAAG;QAA2B;UAAA0B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eACNjD,OAAA;QAAK4C,SAAS,EAAC,cAAc;QAAAC,QAAA,gBAC3B7C,OAAA;UACEoD,IAAI,EAAC,MAAM;UACXC,WAAW,EAAC,eAAe;UAC3BC,KAAK,EAAEjD,MAAO;UACdkD,QAAQ,EAAGC,CAAC,IAAKlD,SAAS,CAACkD,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UAC3CV,SAAS,EAAC;QAAa;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxB,CAAC,eACFjD,OAAA;UAAK4C,SAAS,EAAC,cAAc;UAAAC,QAAA,gBAC3B7C,OAAA;YACE4C,SAAS,EAAC,eAAe;YACzBM,OAAO,EAAEA,CAAA,KAAMd,QAAQ,CAAC/B,MAAM,EAAE,SAAS,CAAE;YAC3C8C,QAAQ,EAAE/B,SAAU;YAAAyB,QAAA,EAEnBzB,SAAS,GAAG,iBAAiB,GAAG;UAAW;YAAA0B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtC,CAAC,eACTjD,OAAA;YACE4C,SAAS,EAAC,eAAe;YACzBM,OAAO,EAAEA,CAAA,KAAMvB,YAAY,CAACtB,MAAM,CAAE;YACpC8C,QAAQ,EAAE/B,SAAU;YAAAyB,QAAA,EAEnBzB,SAAS,GAAG,YAAY,GAAG;UAAe;YAAA0B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACrC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,gBAENjD,OAAA;MAAK4C,SAAS,EAAC,gBAAgB;MAAAC,QAAA,EAC5BpC,SAAS,gBACRT,OAAA;QAAA6C,QAAA,gBACE7C,OAAA;UAAA6C,QAAA,GAAI,WAAS,EAACxC,MAAM;QAAA;UAAAyC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC1BjD,OAAA;UAAQ4C,SAAS,EAAC,cAAc;UAACM,OAAO,EAAEV,eAAgB;UAAAK,QAAA,EAAC;QAE3D;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTjD,OAAA;UAAA6C,QAAA,GAAI,UAAQ,EAACpC,SAAS,CAACM,MAAM;QAAA;UAAA+B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACnCjD,OAAA;UAAA6C,QAAA,GAAI,gBAAc,EAACpC,SAAS,CAACK,WAAW;QAAA;UAAAgC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC9CjD,OAAA,CAACH,KAAK;UAACc,KAAK,EAAEF,SAAS,CAACE,KAAM;UAAC4B,QAAQ,EAAEA;QAAS;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,EACpDxC,SAAS,CAACM,MAAM,KAAK,UAAU,iBAC9Bf,OAAA;UAAI4C,SAAS,EAAC,gBAAgB;UAAAC,QAAA,GAAC,SACtB,EAAC,GAAG,EACVpC,SAAS,CAACiD,MAAM,KAAK,MAAM,GACxB,cAAc,GACdjD,SAAS,CAACiD,MAAM;QAAA;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClB,CACL;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,gBAENjD,OAAA;QAAA6C,QAAA,EAAI;MAAqB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAC9B;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CACN,EACA/B,YAAY,iBAAIlB,OAAA;MAAG4C,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAE3B;IAAY;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7D,CAAC;AAEV,CAAC;AAAC7C,EAAA,CA3MID,GAAG;AAAAwD,EAAA,GAAHxD,GAAG;AA6MT,eAAeA,GAAG;AAAC,IAAAwD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}